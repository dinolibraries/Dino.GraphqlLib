name: Build

on:
  push:
    branches: master
    tags: '**'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET Core 8.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.x.x
    - name: Setup .NET Core 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.x.x
    - name: Setup .NET Core 6.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.x.x
    - name: Build
      run: dotnet build --configuration Release
    - name: Test
      run: dotnet test --no-build --configuration Release
  pack:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET Core 8.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.x.x
    - name: Setup .NET Core 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.x.x
    - name: Setup .NET Core 6.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.x.x
    - name: Determine version
      run: echo "::set-env name=VERSION::$(git describe --tags --dirty | cut -c2-)"
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
    - name: Pack
      run: dotnet pack --output ./artifacts --configuration Release -p:Version=$VERSION
    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: ./artifacts
        
  publish:
    runs-on: ubuntu-latest
    needs: pack
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Setup .NET Core 8.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.x.x
    - name: Setup .NET Core 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.x.x
    - name: Setup .NET Core 6.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.x.x
    - uses: actions/download-artifact@v1
      with:
        name: artifacts
        path: ./artifacts
    - name: Publish packages
      run: dotnet nuget push ./artifacts/**.nupkg --source nuget.org --api-key ${{secrets.NUGET_TOKEN}}
